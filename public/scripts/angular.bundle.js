"use strict";function siteConfig(e,n){e.html5Mode(!0),n.otherwise("/")}function appTransitions(e,n){n.enable("TRANSITION"),e.$on("$stateChangeStart",function(e,n,o,t,i){console.log("$stateChangeStart "+t.name+JSON.stringify(i)+" -> "+n.name+JSON.stringify(o))}),e.$on("$stateChangeSuccess",function(e,n,o,t,i){console.log("$stateChangeSuccess "+t.name+JSON.stringify(i)+" -> "+n.name+JSON.stringify(o))}),e.$on("$stateChangeError",function(e,n,o,t,i){console.log("$stateChangeError "+t.name+JSON.stringify(i)+" -> "+n.name+JSON.stringify(o))})}function authCheck(e,n){e.onBefore({to:"app.about"},function(e){e.injector().get("apiService").checkAuth({token:"123456"}).catch(function(e){console.log("failed auth",e),n.go("app.home")})})}function aboutRoute(e){e.state({name:"app.about",url:"about",component:"aboutComponent",resolve:{}})}function baseRoute(e){e.state({name:"app",url:"/",template:"<layout-component></layout-component>",abstract:!0,resolve:{}})}function apiService(e,n){return{checkAuth:function(o){var t=e.defer();return console.log("checkAuth data",o),n({method:"POST",url:"api/auth",data:o}).then(function(e){t.resolve(e.data)}).catch(function(e){t.reject(e)}),t.promise},getUsers:function(){var o=e.defer();return n({method:"GET",url:"/api/users"}).then(function(e){console.log("success res",e),o.resolve(e.data)}).catch(function(e){o.reject(e),console.log("error err",e)}),o.promise}}}function modalService(){return{method:function(){}}}function httpErrorService(){return{method:function(){}}}function utilitiesService(){return{method:function(){}}}function webErrorService(){return{method:function(){}}}function homeRoute(e){e.state({name:"app.home",url:"",component:"homeComponent",abstract:!1,resolve:{property:function(){return"property"},users:["apiService",function(e){return e.getUsers().then(function(e){return console.log("Im returning in a resolve"),e})}]}})}angular.module("app",["ui.router","app.common","app.base","app.layout","app.home","app.about","login"]),angular.module("app.about",[]),angular.module("app.base",[]),angular.module("app.common",[]),angular.module("app.home",[]),angular.module("app.layout",[]),angular.module("login",[]),angular.module("app").config(siteConfig),siteConfig.$inject=["$locationProvider","$urlRouterProvider"],appTransitions.$inject=["$rootScope","$trace"],authCheck.$inject=["$transitions","$state"],angular.module("app").run(appTransitions).run(authCheck);var aboutComponent={bindings:{},controller:function(){var e=this;e.publicMethods=function(){},e.$onInit=function(){},e.$postLink=function(){},e.$onChange=function(){},e.$onDestroy=function(){}},template:'<div>\n<h1>about</h1>\n<ul>\n<li ui-sref-active="">me</li>\n<li ui-sref-active="">you</li>\n<li ui-sref-active="">other</li>\n</ul>\n</div>'};angular.module("app.about").component("aboutComponent",aboutComponent),aboutComponent.$inject=[],angular.module("app.about").config(aboutRoute),aboutRoute.$inject=["$stateProvider"],baseRoute.$inject=["$stateProvider"],angular.module("app.base").config(baseRoute),angular.module("app.common").factory("apiService",apiService),apiService.$inject=["$q","$http"],angular.module("app.common").factory("modalService",modalService),modalService.$inject=[],angular.module("app.common").factory("httpErrorService",httpErrorService),httpErrorService.$inject=[],angular.module("app.common").factory("utilitiesService",utilitiesService),utilitiesService.$inject=[],angular.module("app.common").factory("webErrorService",webErrorService),webErrorService.$inject=[];var homeComponent={bindings:{property:"<",users:"<"},controller:["$state","apiService",function(e,n){var o=this;o.emailClick=function(){},o.$onInit=function(){console.log("check resolve property",o.property),n.getUsers().then(function(e){console.log("Im returning in a normal controller"),o.users=e})},o.$postLink=function(){},o.$onChange=function(){},o.$onDestroy=function(){}}],template:'<div>\n    <h1>home</h1>\n    <div class="user-container">\n        <ul class="user-list">\n            <li ng-repeat="user in $ctrl.users">\n                <div ng-click="user.clicked = !user.clicked">username: {{user.username}}</div>\n                <div ng-if="user.clicked">\n                    <div ng-click="$ctrl.emailClick(user.email)">email: {{user.email}}</div>\n                    <div>first name: {{user.firstName}}</div>\n                    <div>last name: {{user.lastName}}</div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class="email-container">\n        <ui-view></ui-view>\n    </div>\n</div>'};angular.module("app.home").component("homeComponent",homeComponent),angular.module("app.home").config(homeRoute),homeRoute.$inject=["$stateProvider"];var layoutComponent={bindings:{},controller:function(){},template:'<div class="container">\n    <div>\n        \x3c!--<div ui-view="header"></ui-view>--\x3e\n        <header-component></header-component>\n    </div>\n    <div>\n        \x3c!--<div ui-view="body"></ui-view>--\x3e\n        <body-component></body-component>\n    </div>\n    <div>\n        \x3c!--<div ui-view="footer"></ui-view>--\x3e\n        <footer-component></footer-component>\n    </div>\n</div>'};angular.module("app.layout").component("layoutComponent",layoutComponent);var bodyComponent={bindings:{},controller:function(){},template:'<div class="body-container" style="height: 250px; overflow-y: scroll;">\n    <ui-view></ui-view>\n</div>'};angular.module("app.layout").component("bodyComponent",bodyComponent),bodyComponent.$inject=[];var headerComponent={bindings:{},controller:function(){this.$onInit=function(){}},template:'<div class="link-bar" style="background-color: lightgreen; height: 80px;">\n    <a ui-sref="app.home">Home</a>\n    <a ui-sref="app.about">About</a>\n</div>'};angular.module("app.layout").component("headerComponent",headerComponent);var footerComponent={bindings:{},controller:function(){},template:"<h1>footer</h1>"};angular.module("app.layout").component("footerComponent",footerComponent),footerComponent.$inject=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
